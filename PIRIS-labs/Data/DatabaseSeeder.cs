using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PIRIS_labs.Data.Entities;

namespace PIRIS_labs.Data
{
  public static class DatabaseSeeder
  {
    public static void SeedDatabase(ModelBuilder builder)
    {
      SeedCities(builder.Entity<City>());
      SeedMaritalStatuses(builder.Entity<MaritalStatus>());
      SeedNationalities(builder.Entity<Nationality>());
      SeedDisabilities(builder.Entity<Disability>());
    }

    public static void SeedCities(EntityTypeBuilder<City> cityBuilder)
    {
      cityBuilder.HasData(new City { Name = "Yerpolis" });
      cityBuilder.HasData(new City { Name = "Qexpolis" });
      cityBuilder.HasData(new City { Name = "Ijefbridge" });
      cityBuilder.HasData(new City { Name = "Zhexson" });
      cityBuilder.HasData(new City { Name = "Dekdale" });
      cityBuilder.HasData(new City { Name = "Purgh" });
      cityBuilder.HasData(new City { Name = "Jine" });
      cityBuilder.HasData(new City { Name = "Fleim" });
      cityBuilder.HasData(new City { Name = "Andville" });
      cityBuilder.HasData(new City { Name = "Enslens" });
      cityBuilder.HasData(new City { Name = "Bruusginia" });
      cityBuilder.HasData(new City { Name = "Vluddon" });
      cityBuilder.HasData(new City { Name = "Cluebridge" });
      cityBuilder.HasData(new City { Name = "Besding" });
      cityBuilder.HasData(new City { Name = "Keedlas" });
      cityBuilder.HasData(new City { Name = "Plando" });
      cityBuilder.HasData(new City { Name = "Breka" });
      cityBuilder.HasData(new City { Name = "Bison" });
      cityBuilder.HasData(new City { Name = "Andsas" });
      cityBuilder.HasData(new City { Name = "Encedon" });
      cityBuilder.HasData(new City { Name = "Shixrith" });
      cityBuilder.HasData(new City { Name = "Justin" });
      cityBuilder.HasData(new City { Name = "Flufield" });
      cityBuilder.HasData(new City { Name = "Zheanford" });
      cityBuilder.HasData(new City { Name = "Graepding" });
      cityBuilder.HasData(new City { Name = "Osheles" });
      cityBuilder.HasData(new City { Name = "Ephoni" });
      cityBuilder.HasData(new City { Name = "Streah" });
      cityBuilder.HasData(new City { Name = "Ingdence" });
      cityBuilder.HasData(new City { Name = "Amport" });
      cityBuilder.HasData(new City { Name = "Mucaster" });
      cityBuilder.HasData(new City { Name = "Shagas" });
      cityBuilder.HasData(new City { Name = "Qribert" });
      cityBuilder.HasData(new City { Name = "Khetmore" });
      cityBuilder.HasData(new City { Name = "Dorough" });
      cityBuilder.HasData(new City { Name = "Stranta" });
      cityBuilder.HasData(new City { Name = "Jeka" });
      cityBuilder.HasData(new City { Name = "Qesa" });
      cityBuilder.HasData(new City { Name = "Olislas" });
      cityBuilder.HasData(new City { Name = "Icofield" });
    }

    public static void SeedMaritalStatuses(EntityTypeBuilder<MaritalStatus> maritalStatusBuilder)
    {
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Single" });
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Married" });
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Widowed" });
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Divorced" });
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Separated" });
      maritalStatusBuilder.HasData(new MaritalStatus { Name = "Registered partnership" });
    }

    public static void SeedNationalities(EntityTypeBuilder<Nationality> nationalityBuilder)
    {
      nationalityBuilder.HasData(new Nationality { Name = "Afghan" });
      nationalityBuilder.HasData(new Nationality { Name = "Albanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Algerian" });
      nationalityBuilder.HasData(new Nationality { Name = "American" });
      nationalityBuilder.HasData(new Nationality { Name = "Andorran" });
      nationalityBuilder.HasData(new Nationality { Name = "Angolan" });
      nationalityBuilder.HasData(new Nationality { Name = "Anguillan" });
      nationalityBuilder.HasData(new Nationality { Name = "Argentine" });
      nationalityBuilder.HasData(new Nationality { Name = "Armenian" });
      nationalityBuilder.HasData(new Nationality { Name = "Australian" });
      nationalityBuilder.HasData(new Nationality { Name = "Austrian" });
      nationalityBuilder.HasData(new Nationality { Name = "Azerbaijani" });
      nationalityBuilder.HasData(new Nationality { Name = "Bahamian" });
      nationalityBuilder.HasData(new Nationality { Name = "Bahraini" });
      nationalityBuilder.HasData(new Nationality { Name = "Bangladeshi" });
      nationalityBuilder.HasData(new Nationality { Name = "Barbadian" });
      nationalityBuilder.HasData(new Nationality { Name = "Belarusian" });
      nationalityBuilder.HasData(new Nationality { Name = "Belgian" });
      nationalityBuilder.HasData(new Nationality { Name = "Belizean" });
      nationalityBuilder.HasData(new Nationality { Name = "Beninese" });
      nationalityBuilder.HasData(new Nationality { Name = "Bermudian" });
      nationalityBuilder.HasData(new Nationality { Name = "Bhutanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Bolivian" });
      nationalityBuilder.HasData(new Nationality { Name = "Botswanan" });
      nationalityBuilder.HasData(new Nationality { Name = "Brazilian" });
      nationalityBuilder.HasData(new Nationality { Name = "British" });
      nationalityBuilder.HasData(new Nationality { Name = "British Virgin Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Bruneian" });
      nationalityBuilder.HasData(new Nationality { Name = "Bulgarian" });
      nationalityBuilder.HasData(new Nationality { Name = "Burkinan" });
      nationalityBuilder.HasData(new Nationality { Name = "Burmese" });
      nationalityBuilder.HasData(new Nationality { Name = "Burundian" });
      nationalityBuilder.HasData(new Nationality { Name = "Cambodian" });
      nationalityBuilder.HasData(new Nationality { Name = "Cameroonian" });
      nationalityBuilder.HasData(new Nationality { Name = "Canadian" });
      nationalityBuilder.HasData(new Nationality { Name = "Cape Verdean" });
      nationalityBuilder.HasData(new Nationality { Name = "Cayman Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Central African" });
      nationalityBuilder.HasData(new Nationality { Name = "Chadian" });
      nationalityBuilder.HasData(new Nationality { Name = "Chilean" });
      nationalityBuilder.HasData(new Nationality { Name = "Chinese" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Antigua and Barbuda" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Bosnia and Herzegovina" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Guinea-Bissau" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Kiribati" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Seychelles" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of the Dominican Republic" });
      nationalityBuilder.HasData(new Nationality { Name = "Citizen of Vanuatu" });
      nationalityBuilder.HasData(new Nationality { Name = "Colombian" });
      nationalityBuilder.HasData(new Nationality { Name = "Comoran" });
      nationalityBuilder.HasData(new Nationality { Name = "Congolese (Congo)" });
      nationalityBuilder.HasData(new Nationality { Name = "Congolese (DRC)" });
      nationalityBuilder.HasData(new Nationality { Name = "Cook Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Costa Rican" });
      nationalityBuilder.HasData(new Nationality { Name = "Croatian" });
      nationalityBuilder.HasData(new Nationality { Name = "Cuban" });
      nationalityBuilder.HasData(new Nationality { Name = "Cymraes" });
      nationalityBuilder.HasData(new Nationality { Name = "Cymro" });
      nationalityBuilder.HasData(new Nationality { Name = "Cypriot" });
      nationalityBuilder.HasData(new Nationality { Name = "Czech" });
      nationalityBuilder.HasData(new Nationality { Name = "Danish" });
      nationalityBuilder.HasData(new Nationality { Name = "Djiboutian" });
      nationalityBuilder.HasData(new Nationality { Name = "Dominican" });
      nationalityBuilder.HasData(new Nationality { Name = "Dutch" });
      nationalityBuilder.HasData(new Nationality { Name = "East Timorese" });
      nationalityBuilder.HasData(new Nationality { Name = "Ecuadorean" });
      nationalityBuilder.HasData(new Nationality { Name = "Egyptian" });
      nationalityBuilder.HasData(new Nationality { Name = "Emirati" });
      nationalityBuilder.HasData(new Nationality { Name = "English" });
      nationalityBuilder.HasData(new Nationality { Name = "Equatorial Guinean" });
      nationalityBuilder.HasData(new Nationality { Name = "Eritrean" });
      nationalityBuilder.HasData(new Nationality { Name = "Estonian" });
      nationalityBuilder.HasData(new Nationality { Name = "Ethiopian" });
      nationalityBuilder.HasData(new Nationality { Name = "Faroese" });
      nationalityBuilder.HasData(new Nationality { Name = "Fijian" });
      nationalityBuilder.HasData(new Nationality { Name = "Filipino" });
      nationalityBuilder.HasData(new Nationality { Name = "Finnish" });
      nationalityBuilder.HasData(new Nationality { Name = "French" });
      nationalityBuilder.HasData(new Nationality { Name = "Gabonese" });
      nationalityBuilder.HasData(new Nationality { Name = "Gambian" });
      nationalityBuilder.HasData(new Nationality { Name = "Georgian" });
      nationalityBuilder.HasData(new Nationality { Name = "German" });
      nationalityBuilder.HasData(new Nationality { Name = "Ghanaian" });
      nationalityBuilder.HasData(new Nationality { Name = "Gibraltarian" });
      nationalityBuilder.HasData(new Nationality { Name = "Greek" });
      nationalityBuilder.HasData(new Nationality { Name = "Greenlandic" });
      nationalityBuilder.HasData(new Nationality { Name = "Grenadian" });
      nationalityBuilder.HasData(new Nationality { Name = "Guamanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Guatemalan" });
      nationalityBuilder.HasData(new Nationality { Name = "Guinean" });
      nationalityBuilder.HasData(new Nationality { Name = "Guyanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Haitian" });
      nationalityBuilder.HasData(new Nationality { Name = "Honduran" });
      nationalityBuilder.HasData(new Nationality { Name = "Hong Konger" });
      nationalityBuilder.HasData(new Nationality { Name = "Hungarian" });
      nationalityBuilder.HasData(new Nationality { Name = "Icelandic" });
      nationalityBuilder.HasData(new Nationality { Name = "Indian" });
      nationalityBuilder.HasData(new Nationality { Name = "Indonesian" });
      nationalityBuilder.HasData(new Nationality { Name = "Iranian" });
      nationalityBuilder.HasData(new Nationality { Name = "Iraqi" });
      nationalityBuilder.HasData(new Nationality { Name = "Irish" });
      nationalityBuilder.HasData(new Nationality { Name = "Israeli" });
      nationalityBuilder.HasData(new Nationality { Name = "Italian" });
      nationalityBuilder.HasData(new Nationality { Name = "Ivorian" });
      nationalityBuilder.HasData(new Nationality { Name = "Jamaican" });
      nationalityBuilder.HasData(new Nationality { Name = "Japanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Jordanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Kazakh" });
      nationalityBuilder.HasData(new Nationality { Name = "Kenyan" });
      nationalityBuilder.HasData(new Nationality { Name = "Kittitian" });
      nationalityBuilder.HasData(new Nationality { Name = "Kosovan" });
      nationalityBuilder.HasData(new Nationality { Name = "Kuwaiti" });
      nationalityBuilder.HasData(new Nationality { Name = "Kyrgyz" });
      nationalityBuilder.HasData(new Nationality { Name = "Lao" });
      nationalityBuilder.HasData(new Nationality { Name = "Latvian" });
      nationalityBuilder.HasData(new Nationality { Name = "Lebanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Liberian" });
      nationalityBuilder.HasData(new Nationality { Name = "Libyan" });
      nationalityBuilder.HasData(new Nationality { Name = "Liechtenstein citizen" });
      nationalityBuilder.HasData(new Nationality { Name = "Lithuanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Luxembourger" });
      nationalityBuilder.HasData(new Nationality { Name = "Macanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Macedonian" });
      nationalityBuilder.HasData(new Nationality { Name = "Malagasy" });
      nationalityBuilder.HasData(new Nationality { Name = "Malawian" });
      nationalityBuilder.HasData(new Nationality { Name = "Malaysian" });
      nationalityBuilder.HasData(new Nationality { Name = "Maldivian" });
      nationalityBuilder.HasData(new Nationality { Name = "Malian" });
      nationalityBuilder.HasData(new Nationality { Name = "Maltese" });
      nationalityBuilder.HasData(new Nationality { Name = "Marshallese" });
      nationalityBuilder.HasData(new Nationality { Name = "Martiniquais" });
      nationalityBuilder.HasData(new Nationality { Name = "Mauritanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Mauritian" });
      nationalityBuilder.HasData(new Nationality { Name = "Mexican" });
      nationalityBuilder.HasData(new Nationality { Name = "Micronesian" });
      nationalityBuilder.HasData(new Nationality { Name = "Moldovan" });
      nationalityBuilder.HasData(new Nationality { Name = "Monegasque" });
      nationalityBuilder.HasData(new Nationality { Name = "Mongolian" });
      nationalityBuilder.HasData(new Nationality { Name = "Montenegrin" });
      nationalityBuilder.HasData(new Nationality { Name = "Montserratian" });
      nationalityBuilder.HasData(new Nationality { Name = "Moroccan" });
      nationalityBuilder.HasData(new Nationality { Name = "Mosotho" });
      nationalityBuilder.HasData(new Nationality { Name = "Mozambican" });
      nationalityBuilder.HasData(new Nationality { Name = "Namibian" });
      nationalityBuilder.HasData(new Nationality { Name = "Nauruan" });
      nationalityBuilder.HasData(new Nationality { Name = "Nepalese" });
      nationalityBuilder.HasData(new Nationality { Name = "New Zealander" });
      nationalityBuilder.HasData(new Nationality { Name = "Nicaraguan" });
      nationalityBuilder.HasData(new Nationality { Name = "Nigerian" });
      nationalityBuilder.HasData(new Nationality { Name = "Nigerien" });
      nationalityBuilder.HasData(new Nationality { Name = "Niuean" });
      nationalityBuilder.HasData(new Nationality { Name = "North Korean" });
      nationalityBuilder.HasData(new Nationality { Name = "Northern Irish" });
      nationalityBuilder.HasData(new Nationality { Name = "Norwegian" });
      nationalityBuilder.HasData(new Nationality { Name = "Omani" });
      nationalityBuilder.HasData(new Nationality { Name = "Pakistani" });
      nationalityBuilder.HasData(new Nationality { Name = "Palauan" });
      nationalityBuilder.HasData(new Nationality { Name = "Palestinian" });
      nationalityBuilder.HasData(new Nationality { Name = "Panamanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Papua New Guinean" });
      nationalityBuilder.HasData(new Nationality { Name = "Paraguayan" });
      nationalityBuilder.HasData(new Nationality { Name = "Peruvian" });
      nationalityBuilder.HasData(new Nationality { Name = "Pitcairn Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Polish" });
      nationalityBuilder.HasData(new Nationality { Name = "Portuguese" });
      nationalityBuilder.HasData(new Nationality { Name = "Prydeinig" });
      nationalityBuilder.HasData(new Nationality { Name = "Puerto Rican" });
      nationalityBuilder.HasData(new Nationality { Name = "Qatari" });
      nationalityBuilder.HasData(new Nationality { Name = "Romanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Russian" });
      nationalityBuilder.HasData(new Nationality { Name = "Rwandan" });
      nationalityBuilder.HasData(new Nationality { Name = "Salvadorean" });
      nationalityBuilder.HasData(new Nationality { Name = "Sammarinese" });
      nationalityBuilder.HasData(new Nationality { Name = "Samoan" });
      nationalityBuilder.HasData(new Nationality { Name = "Sao Tomean" });
      nationalityBuilder.HasData(new Nationality { Name = "Saudi Arabian" });
      nationalityBuilder.HasData(new Nationality { Name = "Scottish" });
      nationalityBuilder.HasData(new Nationality { Name = "Senegalese" });
      nationalityBuilder.HasData(new Nationality { Name = "Serbian" });
      nationalityBuilder.HasData(new Nationality { Name = "Sierra Leonean" });
      nationalityBuilder.HasData(new Nationality { Name = "Singaporean" });
      nationalityBuilder.HasData(new Nationality { Name = "Slovak" });
      nationalityBuilder.HasData(new Nationality { Name = "Slovenian" });
      nationalityBuilder.HasData(new Nationality { Name = "Solomon Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Somali" });
      nationalityBuilder.HasData(new Nationality { Name = "South African" });
      nationalityBuilder.HasData(new Nationality { Name = "South Korean" });
      nationalityBuilder.HasData(new Nationality { Name = "South Sudanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Spanish" });
      nationalityBuilder.HasData(new Nationality { Name = "Sri Lankan" });
      nationalityBuilder.HasData(new Nationality { Name = "St Helenian" });
      nationalityBuilder.HasData(new Nationality { Name = "St Lucian" });
      nationalityBuilder.HasData(new Nationality { Name = "Stateless" });
      nationalityBuilder.HasData(new Nationality { Name = "Sudanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Surinamese" });
      nationalityBuilder.HasData(new Nationality { Name = "Swazi" });
      nationalityBuilder.HasData(new Nationality { Name = "Swedish" });
      nationalityBuilder.HasData(new Nationality { Name = "Swiss" });
      nationalityBuilder.HasData(new Nationality { Name = "Syrian" });
      nationalityBuilder.HasData(new Nationality { Name = "Taiwanese" });
      nationalityBuilder.HasData(new Nationality { Name = "Tajik" });
      nationalityBuilder.HasData(new Nationality { Name = "Tanzanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Thai" });
      nationalityBuilder.HasData(new Nationality { Name = "Togolese" });
      nationalityBuilder.HasData(new Nationality { Name = "Tongan" });
      nationalityBuilder.HasData(new Nationality { Name = "Trinidadian" });
      nationalityBuilder.HasData(new Nationality { Name = "Tristanian" });
      nationalityBuilder.HasData(new Nationality { Name = "Tunisian" });
      nationalityBuilder.HasData(new Nationality { Name = "Turkish" });
      nationalityBuilder.HasData(new Nationality { Name = "Turkmen" });
      nationalityBuilder.HasData(new Nationality { Name = "Turks and Caicos Islander" });
      nationalityBuilder.HasData(new Nationality { Name = "Tuvaluan" });
      nationalityBuilder.HasData(new Nationality { Name = "Ugandan" });
      nationalityBuilder.HasData(new Nationality { Name = "Ukrainian" });
      nationalityBuilder.HasData(new Nationality { Name = "Uruguayan" });
      nationalityBuilder.HasData(new Nationality { Name = "Uzbek" });
      nationalityBuilder.HasData(new Nationality { Name = "Vatican citizen" });
      nationalityBuilder.HasData(new Nationality { Name = "Venezuelan" });
      nationalityBuilder.HasData(new Nationality { Name = "Vietnamese" });
      nationalityBuilder.HasData(new Nationality { Name = "Vincentian" });
      nationalityBuilder.HasData(new Nationality { Name = "Wallisian" });
      nationalityBuilder.HasData(new Nationality { Name = "Welsh" });
      nationalityBuilder.HasData(new Nationality { Name = "Yemeni" });
      nationalityBuilder.HasData(new Nationality { Name = "Zambian" });
      nationalityBuilder.HasData(new Nationality { Name = "Zimbabwean" });
    }

    public static void SeedDisabilities(EntityTypeBuilder<Disability> disabilityBuilder)
    {
      disabilityBuilder.HasData(new Disability { Name = "Musculoskeletal System" });
      disabilityBuilder.HasData(new Disability { Name = "Special Senses and Speech" });
      disabilityBuilder.HasData(new Disability { Name = "Respiratory Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Cardiovascular System" });
      disabilityBuilder.HasData(new Disability { Name = "Digestive System" });
      disabilityBuilder.HasData(new Disability { Name = "Genitourinary Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Hematological Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Skin Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Endocrine Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Congenital Disorders that Affect Multiple Body Systems" });
      disabilityBuilder.HasData(new Disability { Name = "Neurological Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Mental Disorders" });
      disabilityBuilder.HasData(new Disability { Name = "Cancer (Malignant Neoplastic Diseases)" });
      disabilityBuilder.HasData(new Disability { Name = "Immune System Disorders" });
    }
  }
}
