// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIRIS_labs.Data;

namespace PIRIS_labs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210217205044_SetSeedsMigration")]
    partial class SetSeedsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("AccountPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DebitValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AccountPlanID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.AccountPlan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AccountPlans");

                    b.HasData(
                        new
                        {
                            ID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            AccountName = "Passive account for Individuals",
                            AccountNumber = "3014",
                            AccountType = 1
                        },
                        new
                        {
                            ID = new Guid("e89271c8-a70d-40b2-b07e-e844cd02ab95"),
                            AccountName = "Active account for Entities",
                            AccountNumber = "2400",
                            AccountType = 0
                        },
                        new
                        {
                            ID = new Guid("cc3aecab-f513-4d27-b7ff-265923741884"),
                            AccountName = "Bank cash desk account",
                            AccountNumber = "1010",
                            AccountType = 0
                        },
                        new
                        {
                            ID = new Guid("babf196b-1f70-4377-9275-adb49b200cc3"),
                            AccountName = "Bank Development Fund account",
                            AccountNumber = "7327",
                            AccountType = 1
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.City", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Name");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Name = "Yerpolis"
                        },
                        new
                        {
                            Name = "Purgh"
                        },
                        new
                        {
                            Name = "Jine"
                        },
                        new
                        {
                            Name = "Fleim"
                        },
                        new
                        {
                            Name = "Besding"
                        },
                        new
                        {
                            Name = "Keedlas"
                        },
                        new
                        {
                            Name = "Dorough"
                        },
                        new
                        {
                            Name = "Stranta"
                        },
                        new
                        {
                            Name = "Jeka"
                        },
                        new
                        {
                            Name = "Qesa"
                        },
                        new
                        {
                            Name = "Olislas"
                        },
                        new
                        {
                            Name = "Icofield"
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Client", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualResidenceAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ActualResidenceCityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisabilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomePhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("LiableForMilitaryService")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MobilePhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("MonthlyIncome")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PassportIssuedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("PassportIssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PassportSeries")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Pensioner")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RegistrationCityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WorkPlace")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("ActualResidenceCityName");

                    b.HasIndex("DisabilityName");

                    b.HasIndex("MaritalStatusName");

                    b.HasIndex("NationalityName");

                    b.HasIndex("RegistrationCityName");

                    b.HasIndex(new[] { "IdentificationNumber" }, "IX_Clients_IdentificationNumber")
                        .IsUnique();

                    b.HasIndex(new[] { "PassportSeries", "PassportNumber" }, "IX_Clients_PassportSeries_PassportNumber")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Deposit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ClientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepositPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MainAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PercentAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("DepositPlanID");

                    b.HasIndex("MainAccountID");

                    b.HasIndex("PercentAccountID");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.DepositPlan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayPeriod")
                        .HasColumnType("int");

                    b.Property<Guid>("MainAccountPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PercentAccountPlanID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Revocable")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("MainAccountPlanID");

                    b.HasIndex("PercentAccountPlanID");

                    b.ToTable("DepositPlans");

                    b.HasData(
                        new
                        {
                            ID = new Guid("be9ac5eb-fe7a-4388-9d25-687531f431eb"),
                            DayPeriod = 20,
                            MainAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Name = "Standard",
                            Percent = 0.01m,
                            PercentAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Revocable = true
                        },
                        new
                        {
                            ID = new Guid("bce0f9c6-fc36-4ac6-a52d-f9103a3de885"),
                            DayPeriod = 40,
                            MainAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Name = "Standard+",
                            Percent = 0.05m,
                            PercentAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Revocable = false
                        },
                        new
                        {
                            ID = new Guid("5ef7958f-a759-4206-9786-f2c0dcbc9304"),
                            DayPeriod = 100,
                            MainAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Name = "Medium",
                            Percent = 0.1m,
                            PercentAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Revocable = false
                        },
                        new
                        {
                            ID = new Guid("5321574e-16f1-4b70-945a-66b650ed661b"),
                            DayPeriod = 220,
                            MainAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Name = "Ultra",
                            Percent = 0.4m,
                            PercentAccountPlanID = new Guid("adcaecb8-86f8-4ef3-a57a-6ca703c28daa"),
                            Revocable = true
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Disability", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Name");

                    b.ToTable("Disabilities");

                    b.HasData(
                        new
                        {
                            Name = "None"
                        },
                        new
                        {
                            Name = "Musculoskeletal System"
                        },
                        new
                        {
                            Name = "Special Senses and Speech"
                        },
                        new
                        {
                            Name = "Respiratory Disorders"
                        },
                        new
                        {
                            Name = "Cardiovascular System"
                        },
                        new
                        {
                            Name = "Digestive System"
                        },
                        new
                        {
                            Name = "Genitourinary Disorders"
                        },
                        new
                        {
                            Name = "Hematological Disorders"
                        },
                        new
                        {
                            Name = "Skin Disorders"
                        },
                        new
                        {
                            Name = "Endocrine Disorders"
                        },
                        new
                        {
                            Name = "Congenital Disorders that Affect Multiple Body Systems"
                        },
                        new
                        {
                            Name = "Neurological Disorders"
                        },
                        new
                        {
                            Name = "Mental Disorders"
                        },
                        new
                        {
                            Name = "Cancer (Malignant Neoplastic Diseases)"
                        },
                        new
                        {
                            Name = "Immune System Disorders"
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.MaritalStatus", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Name");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            Name = "Single"
                        },
                        new
                        {
                            Name = "Married"
                        },
                        new
                        {
                            Name = "Widowed"
                        },
                        new
                        {
                            Name = "Divorced"
                        },
                        new
                        {
                            Name = "Separated"
                        },
                        new
                        {
                            Name = "Registered partnership"
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Nationality", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Name");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            Name = "Austrian"
                        },
                        new
                        {
                            Name = "Belarusian"
                        },
                        new
                        {
                            Name = "Czech"
                        },
                        new
                        {
                            Name = "French"
                        },
                        new
                        {
                            Name = "Georgian"
                        },
                        new
                        {
                            Name = "German"
                        },
                        new
                        {
                            Name = "Greek"
                        },
                        new
                        {
                            Name = "Japanese"
                        },
                        new
                        {
                            Name = "Liechtenstein citizen"
                        },
                        new
                        {
                            Name = "Norwegian"
                        },
                        new
                        {
                            Name = "Polish"
                        },
                        new
                        {
                            Name = "Scottish"
                        },
                        new
                        {
                            Name = "Swedish"
                        },
                        new
                        {
                            Name = "Swiss"
                        },
                        new
                        {
                            Name = "Turkish"
                        },
                        new
                        {
                            Name = "Ugandan"
                        },
                        new
                        {
                            Name = "Vatican citizen"
                        },
                        new
                        {
                            Name = "Venezuelan"
                        },
                        new
                        {
                            Name = "Welsh"
                        });
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreditAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DebetAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDay")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CreditAccountID");

                    b.HasIndex("DebetAccountID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Account", b =>
                {
                    b.HasOne("PIRIS_labs.Data.Entities.AccountPlan", "AccountPlan")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountPlan");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Client", b =>
                {
                    b.HasOne("PIRIS_labs.Data.Entities.City", "ActualResidenceCity")
                        .WithMany()
                        .HasForeignKey("ActualResidenceCityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.Disability", "Disability")
                        .WithMany()
                        .HasForeignKey("DisabilityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.City", "RegistrationCity")
                        .WithMany()
                        .HasForeignKey("RegistrationCityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActualResidenceCity");

                    b.Navigation("Disability");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");

                    b.Navigation("RegistrationCity");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Deposit", b =>
                {
                    b.HasOne("PIRIS_labs.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.DepositPlan", "DepositPlan")
                        .WithMany("Deposits")
                        .HasForeignKey("DepositPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.Account", "MainAccount")
                        .WithMany("MainAccountDeposits")
                        .HasForeignKey("MainAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.Account", "PercentAccount")
                        .WithMany("PercentAccountDeposits")
                        .HasForeignKey("PercentAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DepositPlan");

                    b.Navigation("MainAccount");

                    b.Navigation("PercentAccount");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.DepositPlan", b =>
                {
                    b.HasOne("PIRIS_labs.Data.Entities.AccountPlan", "MainAccountPlan")
                        .WithMany("MainAccountPlanOfDeposits")
                        .HasForeignKey("MainAccountPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.AccountPlan", "PercentAccountPlan")
                        .WithMany("PercentAccountPlanOfDeposits")
                        .HasForeignKey("PercentAccountPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainAccountPlan");

                    b.Navigation("PercentAccountPlan");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Transaction", b =>
                {
                    b.HasOne("PIRIS_labs.Data.Entities.Account", "CreditAccount")
                        .WithMany("CreditTransactions")
                        .HasForeignKey("CreditAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIRIS_labs.Data.Entities.Account", "DebitAccount")
                        .WithMany("DebitTransactions")
                        .HasForeignKey("DebetAccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditAccount");

                    b.Navigation("DebitAccount");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.Account", b =>
                {
                    b.Navigation("CreditTransactions");

                    b.Navigation("DebitTransactions");

                    b.Navigation("MainAccountDeposits");

                    b.Navigation("PercentAccountDeposits");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.AccountPlan", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("MainAccountPlanOfDeposits");

                    b.Navigation("PercentAccountPlanOfDeposits");
                });

            modelBuilder.Entity("PIRIS_labs.Data.Entities.DepositPlan", b =>
                {
                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}
